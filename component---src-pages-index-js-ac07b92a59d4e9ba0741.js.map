{"version":3,"file":"component---src-pages-index-js-ac07b92a59d4e9ba0741.js","mappings":"4OA2BA,MAAeA,IACb,MACM,KAAEC,GAASD,GACX,eAAEE,GAAmBD,GACpBE,EAAYC,GAAiBC,EAAAA,SAAe,KAC5CC,EAAYC,GAAiBF,EAAAA,SAAe,KAC5CG,EAAKC,GAAUJ,EAAAA,SAAe,QAErC,OACEA,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,WAASK,UAAU,4BACjBL,EAAAA,cAAA,OAAKK,UAAU,kBACbL,EAAAA,cAAA,OAAKK,UAAU,MAAMC,MAAO,CAAEC,UAAW,WACvCP,EAAAA,cAAA,KAAGK,UAAU,0BAAyB,8BACTL,EAAAA,cAAA,WAAM,qCAEjCA,EAAAA,cAAA,WAAM,qCAIZA,EAAAA,cAAA,OAAKK,UAAU,mBAAmBC,MAAO,CAAEC,UAAW,WACpDP,EAAAA,cAACQ,EAAAA,KAAI,CAACC,GAAG,eAAeJ,UAAU,UAAS,eAG3CL,EAAAA,cAAA,KAAGK,UAAU,SAAQ,yBAAuBK,KAIhDV,EAAAA,cAAA,QAAMK,UAAU,QACdL,EAAAA,cAAA,OAAKK,UAAU,WACbL,EAAAA,cAAA,WAASK,UAAU,UAAUC,MAAO,CAAEK,WAAY,MAChDX,EAAAA,cAAA,OAAKK,UAAU,kBACbL,EAAAA,cAAA,OAAKK,UAAU,aACbL,EAAAA,cAAA,OAAKK,UAAU,qBAyBjBL,EAAAA,cAAA,MAAIM,MAAO,CAAEM,UAAW,UAAW,iBACnCZ,EAAAA,cAAA,OAAKK,UAAU,MAAMC,MAAO,CAAEO,aAAc,SAC1Cb,EAAAA,cAAA,OAAKK,UAAU,YAEbL,EAAAA,cAAA,KACEc,KAAK,IACLT,UAAmB,SAARF,EAAiB,aAAe,GAC3CY,QAASC,IACPA,EAAMC,iBACNb,EAAO,OAAO,GAEjB,QAIDJ,EAAAA,cAAA,KACEc,KAAK,IACLT,UAAmB,SAARF,EAAiB,aAAe,GAC3CY,QAASC,IACPA,EAAMC,iBACNb,EAAO,OAAO,GAEjB,SAIHJ,EAAAA,cAAA,OAAKK,UAAU,eACbL,EAAAA,cAAA,OAAKK,UAAU,aACJ,SAARF,GACCH,EAAAA,cAAA,OAAKK,UAAU,iBACbL,EAAAA,cAAA,YAAOF,IAGF,SAARK,GACCH,EAAAA,cAAA,OAAKK,UAAU,iBACbL,EAAAA,cAAA,YAAOkB,KAAKC,UAAUlB,QAMhCD,EAAAA,cAAA,OACEoB,wBAAyB,CACvBC,OAAQxB,EAAeyB,YASxC,ECpImC,IAE9BC,EAAS,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAcZ,OAdYC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UACbC,OAAA,WACE,MAAM,KAAEjC,GAASkC,KAAKnC,MAChBoC,EAAYnC,EAAKoC,KAAKC,aAAaC,MAEzC,OACElC,EAAAA,cAACmC,EAAAA,EAAM,CAACC,SAAUN,KAAKnC,MAAMyC,SAAUF,MAAOH,GAC5C/B,EAAAA,cAACqC,EAAAA,EAAG,CACFH,MAAM,+EACNI,YAAY,iFAEdtC,EAAAA,cAACuC,EAAG,CAAC3C,KAAMA,IAGjB,EAAC2B,CAAA,CAdY,CAASvB,EAAAA,WAiBxB,O","sources":["webpack://gatsby-starter-blog/./src/components/top.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\n// import \"smartblock/css/smartblock.css\"\n// import Extensions from \"smartblock/extensions\"\n// import Code from \"smartblock/extensions/code\"\n// import Image from \"smartblock/extensions/image\"\nimport { Link, withPrefix } from \"gatsby\"\nimport pkg from \"../../../package.json\"\n// const SmartBlock =\n//   typeof window === \"undefined\" ? (\n//     <div />\n//   ) : (\n//     React.lazy(() => import(\"smartblock/components/smartblock\"))\n//   )\nconst html = `<p>SmartBlock is a block styled editor created by JavaScript. Which gives you nice experience of editing contents at touchscreen. On this page you can see it in action. Try to edit this text ! :)</p>\n<h2>Features</h2>\n<ul>\n  <li>Easy to use with touchscreen device (e.g. smartphone, tablet)</li>\n  <li>Fully customizable</li>\n  <li>Block styled editor</li>\n  <li>Keep clean HTML and wipe out unnecessary tags</li>\n  <li>Get the result as HTML or JSON</li>\n  <li>Keep style when copy and paste contents</li>\n</ul>\n<p style=\"text-align:center;\">SmartBlock is provided with MIT license. <br/>Made by : @appleple â™¥ OSS</p>\n<img src=\"${withPrefix(\"/footer.svg\")}\" />\n`\n\nexport default props => {\n  const isSSR = typeof window === \"undefined\"\n  const { data } = props\n  const { markdownRemark } = data\n  const [outputHTML, setOutputHTML] = React.useState(\"\")\n  const [outputJSON, setOutputJSON] = React.useState(\"\")\n  const [tab, setTab] = React.useState(\"html\")\n\n  return (\n    <>\n      <section className=\"hero is-center firstview\">\n        <div className=\"inner is-small\">\n          <div className=\"box\" style={{ textAlign: \"center\" }}>\n            <p className=\"margin-top-medium lead\">\n              Modern block styled editor <br />\n              powered with React and ProseMirror\n              <br /> Easier to edit on touchscreen.\n            </p>\n          </div>\n        </div>\n        <div className=\"inner hero-inner\" style={{ textAlign: \"center\" }}>\n          <Link to=\"/get-started\" className=\"button\">\n            Get Started\n          </Link>\n          <p className=\"small\">Current Version : Ver.{pkg.version}</p>\n        </div>\n      </section>\n\n      <main className=\"main\">\n        <div className=\"content\">\n          <section className=\"section\" style={{ paddingTop: \"0\" }}>\n            <div className=\"inner is-small\">\n              <div className=\"app-frame\">\n                <div className=\"app-frame-inner\">\n                  {/* {!isSSR && (\n                    <React.Suspense fallback={<div />}>\n                      <SmartBlock\n                        showTitle\n                        titleText=\"What is SmartBlock?\"\n                        extensions={[\n                          ...Extensions,\n                          new Code(),\n                          new Image({\n                            withCaption: false,\n                            imgFullClassName: \"full\",\n                            imgClassName: \"small\",\n                          }),\n                        ]}\n                        html={html}\n                        onChange={({ html, json }) => {\n                          setOutputHTML(html)\n                          setOutputJSON(json)\n                        }}\n                      />\n                    </React.Suspense>\n                  )} */}\n                </div>\n              </div>\n              <h2 style={{ marginTop: \"-50px\" }}>Output Result</h2>\n              <div className=\"tab\" style={{ marginBottom: \"50px\" }}>\n                <div className=\"tab-list\">\n                  {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                  <a\n                    href=\"#\"\n                    className={tab === \"html\" ? \"is-current\" : \"\"}\n                    onClick={event => {\n                      event.preventDefault()\n                      setTab(\"html\")\n                    }}\n                  >\n                    HTML\n                  </a>\n                  {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                  <a\n                    href=\"#\"\n                    className={tab === \"json\" ? \"is-current\" : \"\"}\n                    onClick={event => {\n                      event.preventDefault()\n                      setTab(\"json\")\n                    }}\n                  >\n                    JSON\n                  </a>\n                </div>\n                <div className=\"tab-content\">\n                  <div className=\"is-active\">\n                    {tab === \"html\" && (\n                      <pre className=\"language-html\">\n                        <code>{outputHTML}</code>\n                      </pre>\n                    )}\n                    {tab === \"json\" && (\n                      <pre className=\"language-html\">\n                        <code>{JSON.stringify(outputJSON)}</code>\n                      </pre>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: markdownRemark.html,\n                }}\n              />\n            </div>\n          </section>\n        </div>\n      </main>\n    </>\n  )\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Top from '../components/top';\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <Seo\n          title=\"SmartBlock - A Modern Block Based Wysiwyg Editor using React and ProseMirror\"\n          description=\"SmartBlock - A Modern Block Based Wysiwyg Editor using React and ProseMirror\"\n        />\n        <Top data={data}/>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(frontmatter: { toppage: { eq: \"true\" } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n      }\n    }\n  }\n`\n"],"names":["props","data","markdownRemark","outputHTML","setOutputHTML","React","outputJSON","setOutputJSON","tab","setTab","className","style","textAlign","Link","to","pkg","paddingTop","marginTop","marginBottom","href","onClick","event","preventDefault","JSON","stringify","dangerouslySetInnerHTML","__html","html","BlogIndex","_React$Component","apply","arguments","_inheritsLoose","prototype","render","this","siteTitle","site","siteMetadata","title","Layout","location","Seo","description","Top"],"sourceRoot":""}